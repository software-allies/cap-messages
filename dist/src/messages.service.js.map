{"version":3,"file":"messages.service.js","sourceRoot":"","sources":["../../src/messages.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { ConfigService } from './config.service';\r\n// import * as socketIo from 'socket.io-client';\r\nimport { Socket } from './socket.interface';\r\nimport { MessageInterface } from './message.interface';\r\n\r\n// En código inicial estaba como (as socketIo) se cambió por (io)\r\nimport * as io from 'socket.io-client';\r\n\r\n// Esto es un hack para que funcione rollup\r\nvar ioFunc = (io as any).default ? (io as any).default : io;\r\n \r\n// Esto era lo que original estaba antes del hack (io en vez de _io)\r\ndeclare var _io : {\r\n  connect(url: string): Socket;\r\n};\r\n\r\n@Injectable()\r\nexport class MessagesService {\r\n\r\n  socket: Socket;\r\n  observer: Observer<number>;\r\n  observerMessage: Observer<string>;\r\n  headers: HttpHeaders;\r\n  apiUrl: string;\r\n\r\n  constructor(\r\n    private configService: ConfigService,\r\n    private _http: HttpClient){\r\n\r\n    // Después de aplicar hack se cambio de (socketIo a ioFunc)\r\n    this.socket = ioFunc(configService.wsUrl);\r\n\r\n    this.headers = new HttpHeaders();\r\n    this.headers.set(\"Content-Type\", \"application/json; charset=UTF-8\");\r\n    this.headers.set('Authentication', localStorage.getItem('_token') || '');\r\n\r\n    this.apiUrl = configService.apiUrl;\r\n  }\r\n\r\n  sendMessage(message: MessageInterface): Observable<any> {\r\n\r\n      this.socket.emit('clientmessage', message);\r\n      \r\n      return this._http.post(`${this.apiUrl}messages`, message, { headers: this.headers })\r\n          .map((response: Response) => response)\r\n          .catch(this.handleError);\r\n  }\r\n  \r\n  getMessages() : Observable<string[]> {\r\n\r\n      return this._http.get(`${this.apiUrl}messages`, { headers: this.headers })\r\n          .map((response: Response) => response)\r\n          .catch(this.handleError);\r\n  }\r\n\r\n  subscribeMessages() : Observable<string> {\r\n\r\n    this.socket.on('message', (res) => {\r\n      this.observerMessage.next(res.msg);\r\n    });\r\n\r\n    this.socket.emit('clientdata', 'Joined to chat');\r\n\r\n    return this.createObservableString();\r\n  }\r\n\r\n  createObservableString() : Observable<string> {\r\n      return new Observable<string>(observer => {\r\n        this.observerMessage = observer;\r\n      });\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    console.error('server error:', error);\r\n    if (error.error instanceof Error) {\r\n        let errMessage = error.error.message;\r\n        return Observable.throw(errMessage);\r\n    }\r\n    return Observable.throw(error || 'Socket.io server error');\r\n  }\r\n\r\n}\r\n"]}