!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common/http"),require("rxjs/Observable"),require("socket.io-client"),require("@angular/forms"),require("@angular/common"),require("ionic-angular")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common/http","rxjs/Observable","socket.io-client","@angular/forms","@angular/common","ionic-angular"],t):t((e.ng=e.ng||{},e.ng.capmessages={}),e.ng.core,null,null,null,null,null,null)}(this,function(e,n,s,r,t,o,i,a){"use strict";var u="default"in t?t.default:t,l=function(){function e(e){e&&(this.wsUrl=e.wsUrl,this.wsUrl=e.apiUrl)}return e.decorators=[{type:n.Injectable}],e.ctorParameters=function(){return[{type:e,decorators:[{type:n.Optional}]}]},e}(),c=u||t,m=function(){function e(e,t){this.configService=e,this._http=t,this.socket=c(e.wsUrl),this.headers=new s.HttpHeaders,this.headers.set("Content-Type","application/json; charset=UTF-8"),this.headers.set("Authentication",localStorage.getItem("_token")||""),this.apiUrl=e.apiUrl}return e.prototype.sendMessage=function(e){return this.socket.emit("clientmessage",e),this._http.post(this.apiUrl+"messages",e,{headers:this.headers}).map(function(e){return e}).catch(this.handleError)},e.prototype.getMessages=function(){return this._http.get(this.apiUrl+"messages",{headers:this.headers}).map(function(e){return e}).catch(this.handleError)},e.prototype.subscribeMessages=function(){var t=this;return this.socket.on("message",function(e){t.observerMessage.next(e.msg)}),this.socket.emit("clientdata","Joined to chat"),this.createObservableString()},e.prototype.createObservableString=function(){var t=this;return new r.Observable(function(e){t.observerMessage=e})},e.prototype.handleError=function(e){if(console.error("server error:",e),e.error instanceof Error){var t=e.error.message;return r.Observable.throw(t)}return r.Observable.throw(e||"Socket.io server error")},e.decorators=[{type:n.Injectable}],e.ctorParameters=function(){return[{type:l},{type:s.HttpClient}]},e}(),g=function(){function e(e,t){this.messageService=e,this.formBuilder=t,this._messages=[],this.send=new n.EventEmitter,this.message={nickname:"",message:""}}return e.prototype.ngOnInit=function(){var t=this;this.messagesform=this.formBuilder.group({nickname:["",[o.Validators.required,o.Validators.minLength(3)]],message:["",o.Validators.required]}),this.messageService.getMessages().subscribe(function(e){t._messages=e}),this.sub=this.messageService.subscribeMessages().subscribe(function(e){console.log("message",e),t._messages.push(e)})},e.prototype.ngOnDestroy=function(){this.sub.unsubscribe()},e.prototype.onSubmit=function(){this.messageService.sendMessage(this.message).subscribe(function(e){console.log("onSubmit result",e)}),this.message.message=""},e.decorators=[{type:n.Component,args:[{selector:"msg-app",template:'\n<ion-grid>\n   <ion-row>\n     <ion-col  col-12 col-xl-8 offset-xl-2 col-lg-10 offset-lg-1>\n        <ion-list>\n            <ion-item *ngFor="let _message of _messages">\n                <strong>{{_message.nickname}}</strong>: {{_message.message}}\n            </ion-item>\n        </ion-list>\n\n        <ion-list>\n            <form [formGroup]="messagesform" (ngSubmit)="onSubmit()">\n\n            <ion-item>\n                <ion-label stacked primary>Nickname</ion-label>\n                <ion-input [(ngModel)]="message.nickname" formControlName="nickname"\n                        type="text" id="nickname" spellcheck="false" autocapitalize="off" ngDefaultControl>\n                </ion-input>\n            </ion-item>\n            <ion-item>\n                <ion-label stacked primary>Message</ion-label>\n                <ion-input [(ngModel)]="message.message" formControlName="message" type="text" id="message" ngDefaultControl>\n                </ion-input>\n            </ion-item>\n\n            <button ion-button type="submit" block primary [disabled]="!messagesform.valid">Send</button>\n\n            </form>\n        </ion-list>\n     </ion-col>\n   </ion-row>\n </ion-grid>\n        ',styles:[""],encapsulation:n.ViewEncapsulation.Emulated}]}],e.ctorParameters=function(){return[{type:m},{type:o.FormBuilder}]},e.propDecorators={send:[{type:n.Output}]},e}(),p=function(){function t(){}return t.forRoot=function(e){return{ngModule:t,providers:[{provide:l,useValue:e}]}},t.decorators=[{type:n.NgModule,args:[{declarations:[g],imports:[a.IonicModule,s.HttpClientModule,o.ReactiveFormsModule,i.CommonModule],exports:[s.HttpClientModule,o.ReactiveFormsModule,i.CommonModule,g],providers:[m],schemas:[n.CUSTOM_ELEMENTS_SCHEMA]}]}],t}();e.MessagesModule=p,e.MessagesService=m,e.MessagesComponent=g,Object.defineProperty(e,"__esModule",{value:!0})});